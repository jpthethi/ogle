["Merge pull request #14895 from yongtang/2075-unravel_index\n\nAdd `tf.unravel_index` as an equivalent of `np.unravel_index`","Reverting the switch to max_pool_v2 in python (#16524)","Update API defs and golden\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Address review feedback\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Add test cases for int64 support of unravel_index\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Add int64 support for unravel_index\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Add test cases for tf.unravel_index.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Expose tf.unravel_index in python\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Sanitize unravel_index_op.cc with clang-format\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Add `tf.unravel_index` as an equivalent of `np.unravel_index`\n\nThis fix tries to address the issue raised in 2075 where\nthere was no implementation of  `tf.unravel_index`.\nThe `tf.unravel_index` could be quite useful in many places.\nThis fix adds the `tf.unravel_index` in CPU kernel. Note `order`\nin `np.unravel_index` has not been added yet.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Disable AWS S3 virtual addressing (#16443)\n\n* Disable AWS S3 virtual addressing\r\n\r\nThis fix is related to 16397 and 15159. The fix disables\r\nthe virtual addressing of AWS S3, as was suggested in the comment.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix format issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add comment for the passed parameter of virutal addressing.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Fix typo (#16509)\n\n* fix typos","Update docs for installing CUDA/CUDNN (#16495)\n\n* Update docs for installing CUDA/CUDNN\r\n\r\nThis fix addresses the issue raised in 16479 where\r\nCUDA/CUDNN versions from the docs do not match TensorFlow v1.5.0.\r\n\r\nFrom the Dockerfile and docker images ENV, the version of CUDA/CUDNN\r\nfor TensorFlow v1.5.0:\r\n```\r\nCUDA_VERSION 9.0.176\r\nCUDNN_VERSION 7.0.5.15\r\n```\r\n\r\nThis fix updates the doc so that CUDA version is changed from `8.0` -> `9.0`,\r\nCUDNN version is changed from `6.0` -> `7.0`.\r\n\r\nThis fix fixes 16479.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Simplify Android/Tegra GPU makefile file lists (#16471)\n\n* updating CUDA srcs for Makefile build to fix unsatisfied link error\r\n\r\n* more makefile refactoring","Placate pylint on jupyter_notebook_config.py (#16449)","Making MKL-DNN default build choice (#16474)","Merge pull request #16475 from rmlarsen/branch_183446593\n\nBranch 183446593","Merge commit for internal changes","Improvements to eager linear regression benchmark:\n  1. Using _shape_tuple\n  2. Bypassing * over math_ops.mul etc\n  3. Flatmaps in the tape code\n  4. Cache for ones similar to for zeros\n  5. Fast path for _SubGrad\n  6. Fast global_step += 1 for resource variables\n  7. Bypassing deprecated args decorator in eager mode\n\nPiperOrigin-RevId: 183446593","tfe.metrics.{Mean,Accuracy} return their inputs.\n\nThis makes chaining them easier. Control dependencies to ensure updates\nhappen are implicitly added by the function code.\n\nPiperOrigin-RevId: 183446211","To add __init__.py to some paths that are imported by other modules.\n\nPiperOrigin-RevId: 183443656","Delete mkl_tfconv_op.cc which seem to be a duplicate of mkl_tfconv_op.h, and did not exist in the external github TF repository.\n\nPiperOrigin-RevId: 183443347","Fix build error with GCC 7.2.1 on AWS Linux 2 (#16470)\n\nThis fix fixes a build failure when compiling with\r\nGCC 7.2.1 on AWS Linux 2:\r\n```\r\ngcc version 7.2.1 20170915 (Red Hat 7.2.1-2) (GCC)\r\n```\r\n\r\nThe eror output was:\r\n```\r\n...\r\n./tensorflow/contrib/lite/toco/model.h:1567:25: error: 'std::function' has not been declared\r\n   void EraseArrays(std::function<bool(const string&)> discardable) {\r\n  .....\r\n```\r\n\r\nThis fix is related to 16046.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","Add op level memory usage estimation to the op_level_cost_estimator\n\nPiperOrigin-RevId: 183441321","Automated g4 rollback of changelist 183321394\n\nPiperOrigin-RevId: 183438398","Branch 183429339 (#16469)\n\n* Change `reduce_logsumexp` to internally use `reshape` rather than `squeeze`\r\nsince the latter requires the `axis` arg to be a Python `list`.\r\n\r\nPiperOrigin-RevId: 183396533\r\n\r\n* Kernel utils to support broadcast add and mul.\r\n\r\nPiperOrigin-RevId: 183397494\r\n\r\n* Updating sparsify_gather.\r\n\r\nPiperOrigin-RevId: 183402917\r\n\r\n* [tf.data] Move slow-path-related code into the slow path in IteratorHandleOp::Compute().\r\n\r\nThis slightly reduces the amount of work performed when an iterator is accessed (after the first access), and potentially reduces contention if concurrent steps are accessing the same iterator.\r\n\r\nPiperOrigin-RevId: 183406221\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} in under grappler.\r\n\r\nPiperOrigin-RevId: 183406440\r\n\r\n* Increase shard count of //third_party/tensorflow/python:nn_batchnorm_test to avoid timeouts\r\n\r\nWhen run under asan, the test runs for about 5 minutes, and sometimes\r\nlonger, causing frequent timeouts.\r\n\r\nThis change increases the shard count of the test to 4, which brings the run time\r\nof the longest running shard under asan to about 2 minutes.\r\n\r\nPiperOrigin-RevId: 183414888\r\n\r\n* Add available choices to toco flags and fix minor formatting issues.\r\n\r\nPiperOrigin-RevId: 183415713\r\n\r\n* Performance improvements to some GPU code to use shared locks instead of unique locks for some hotspot cases.\r\n\r\nPiperOrigin-RevId: 183418559\r\n\r\n* [XLA] Improve error message for bad slices.\r\n\r\nPiperOrigin-RevId: 183420038\r\n\r\n* Fix py3 build rules for all py tests under py2tf.\r\n\r\nPiperOrigin-RevId: 183422144\r\n\r\n* Fix bug with Operation._control_inputs setter.\r\n\r\nPiperOrigin-RevId: 183422192\r\n\r\n* Make softmax_op_test.py work with C API enabled.\r\n\r\nPiperOrigin-RevId: 183422829\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} files in tensorflow/core/kernels.\r\n\r\nPiperOrigin-RevId: 183423961\r\n\r\n* Fix the documentation for the dense layer for how rank > 2 inputs are handled.\r\n\r\nPiperOrigin-RevId: 183425868\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} in tensorflow/core/ops.\r\n\r\nPiperOrigin-RevId: 183429339","Improved heuristics for swapping\n\nPiperOrigin-RevId: 183435438","Add more tests to validate the bucket boundaries for\ninputs with equal distributions.\n\nPiperOrigin-RevId: 183435084","Fix a bug in PR #15906 (#16467)","Make the graph generation of TFBT deterministic.\n\nPiperOrigin-RevId: 183431139"]